{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "roll-in-text",
  "type": "registry:block",
  "title": "Text Roll Wrapper",
  "description": "A fully reusable and customizable text wrapper with a smooth roll-in animation effect. Simply wrap your string with the component and watch the text come to life with motion magic.",
  "dependencies": [
    "motion"
  ],
  "files": [
    {
      "path": "components/roll-in-text.tsx",
      "content": "'use client';\n\nimport { cn } from '@/lib/cn';\nimport { motion } from 'motion/react';\n\ninterface RollInTextProps {\n  children: string;\n  className?: string;\n  rotateY?: number[] | string[];\n  rotateX?: number[] | string[];\n  y?: string[] | number[];\n  x?: string[] | number[];\n  delay?: number;\n  duration?: number;\n}\n\nexport function RollInText({\n  children,\n  className,\n  rotateX,\n  rotateY,\n  y,\n  x,\n  delay,\n  duration,\n}: RollInTextProps) {\n  const text = children.split('').map((char) => (char === ' ' ? '\\u00A0' : char));\n\n  return (\n    <motion.div\n      className={cn(`inline-block text-5xl`, className)}\n      initial=\"hidden\"\n      whileInView=\"visible\"\n    >\n      {text.map((char, index) => (\n        <motion.span\n          className=\"\"\n          key={index}\n          style={{\n            display: 'inline-block',\n            perspective: '500px',\n            overflow: 'hidden',\n            height: '1em',\n          }}\n          variants={{\n            hidden: { opacity: 0 },\n            visible: {\n              opacity: 1,\n              transition: {\n                delay: index * 0.1,\n              },\n            },\n          }}\n        >\n          <motion.span\n            style={{ display: 'inline-block' }}\n            animate={{\n              y: y ?? ['100%', '-100%', '0%'], // wheel-like motion\n              x: x ?? 0,\n              rotateX: rotateX ?? [0, 360, 0], // optional 3D flip\n              rotateY: rotateY ?? 0,\n            }}\n            transition={{\n              duration: duration ?? 1.4,\n              ease: 'easeInOut',\n              delay: delay ? index * delay : index * 0.05,\n              repeatType: 'loop',\n              repeat: 1,\n            }}\n          >\n            {char}\n          </motion.span>\n        </motion.span>\n      ))}\n    </motion.div>\n  );\n}\n",
      "type": "registry:component"
    },
    {
      "path": "components/demo/roll-in-text-demo.tsx",
      "content": "'use client';\n\nimport { RollInText } from '@/components/roll-in-text';\n\nexport function RollInTextDemo() {\n  return (\n    <div>\n      <div className=\"flex flex-col md:flex-row justify-center md:items-center md:gap-4\">\n        <RollInText className=\" playfair-display-400 font-bold text-3xl md:text-5xl text-red-500 \">\n          REDEFINING\n        </RollInText>\n        <RollInText className=\"font-medium text-3xl md:text-5xl \">LIMITS,</RollInText>\n      </div>\n      <div className=\"flex md:items-center flex-col md:flex-row justify-center  md:gap-4\">\n        <RollInText className=\"font-medium text-3xl md:text-5xl \">FIGHTING FOR</RollInText>\n        <RollInText className=\"font-bold  playfair-display-400  text-red-500 text-3xl md:text-5xl \">\n          WINS\n        </RollInText>\n      </div>\n    </div>\n  );\n}\n\n//Creator - Partharora\n//X - https://x.com/partharora9128\n",
      "type": "registry:component"
    }
  ]
}