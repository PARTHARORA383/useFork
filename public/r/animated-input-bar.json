{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "animated-input-bar",
  "type": "registry:block",
  "title": "Animated Input Bar",
  "description": "A simple hello world component.",
  "dependencies": [
    "motion",
    "lucide-react"
  ],
  "files": [
    {
      "path": "components/animated-inputbar.tsx",
      "content": "'use client';\n\nimport { useState } from 'react';\nimport { Input } from './ui/input';\nimport { motion, cubicBezier } from 'motion/react';\n\nconst LABEL_TRANSITION = {\n  duration: 0.28,\n  ease: cubicBezier(0.4, 0, 0.2, 1), // âœ… correct type\n};\n\nexport interface AnimatedInputBarProps {\n  value?: string;\n  onChange?: (value: string) => void;\n  label?: string;\n  className?: string;\n}\n\nexport function AnimatedInputBar({\n  value,\n  onChange,\n  label = 'Label',\n  className,\n}: AnimatedInputBarProps) {\n  const [isFocused, setIsFocused] = useState(false);\n  const [internalValue, setInternalValue] = useState('');\n  const val = value ?? internalValue;\n\n  const isFloating = isFocused || val.length > 0;\n\n  return (\n    <div className={`relative w-fit ${className}`}>\n      {/* Input field */}\n      <Input\n        value={val}\n        onChange={(e) => {\n          setInternalValue(e.target.value);\n          onChange?.(e.target.value);\n        }}\n        onFocus={() => setIsFocused(true)}\n        onBlur={() => setIsFocused(false)}\n        placeholder={isFloating ? `Enter your ${label}` : ''}\n        className=\"relative \n                   border border-gray-300 rounded-md px-3 py-2\n                   transition-all duration-300 ease-in-out transform\n                   focus:ring-2 focus:ring-blue-500 focus:outline-none\"\n      />\n\n      {/* Animated floating label */}\n      <motion.label\n        className=\"absolute left-3 top-1/2 -translate-y-1/2 bg-background/80 backdrop-blur-sm z-20  px-1 text-foreground \n                   pointer-events-none rounded-sm\"\n        animate={\n          isFloating\n            ? {\n                y: -20,\n                scale: 0.85,\n                color: '#3b82f6', // blue-500\n              }\n            : {\n                y: 0,\n                scale: 1,\n                color: '#6b7280', // gray-500\n              }\n        }\n        transition={LABEL_TRANSITION}\n      >\n        {label}\n      </motion.label>\n    </div>\n  );\n}\n",
      "type": "registry:component"
    }
  ]
}